version: '3.9'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BUNDLE_WITHOUT: ''
        EXECJS_RUNTIME: 'Node'
        RAILS_ENV: 'development'
        RAILS_SERVE_STATIC_FILES: 'false'
    tty: true
    stdin_open: true
    env_file: .env
    networks:
      - chatfly_network

  rails:
    <<: *base
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    depends_on:
      - base
      - webpack
      - sidekiq
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      - WEBPACKER_DEV_SERVER_HOST=webpack
      - NODE_ENV=development
      - RAILS_ENV=development
    entrypoint: docker/entrypoints/rails.sh
    command: [ "bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0" ]

  sidekiq:
    <<: *base
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
      - redis
      - mailhog
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
    command: [ "bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml" ]

  webpack:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/webpack.Dockerfile
    image: chatwoot-webpack:development
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules # Node modules shared across containers
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    ports:
      - "3035"
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - NODE_ENV=development
      - RAILS_ENV=development
    entrypoint: docker/entrypoints/webpack.sh
    command: bin/webpack-dev-server

networks:
  chatfly_network:
    name: chatfly_network
    driver: bridge

volumes:
  packs:
  node_modules:
  cache:
  bundle:
